"""Initial migration: create all models

Revision ID: 001
Revises: 
Create Date: 2024-07-30 10:15:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import uuid

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create images table
    op.create_table('images',
        sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4),
        sa.Column('filename', sa.String(length=255), nullable=False),
        sa.Column('file_path', sa.String(length=500), nullable=False),
        sa.Column('upload_date', sa.DateTime(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='imagestatus'), nullable=False),
    )
    op.create_index(op.f('ix_images_id'), 'images', ['id'])
    op.create_index(op.f('ix_images_filename'), 'images', ['filename'])
    op.create_index(op.f('ix_images_upload_date'), 'images', ['upload_date'])
    op.create_index(op.f('ix_images_status'), 'images', ['status'])
    
    # Create search_results table
    op.create_table('search_results',
        sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4),
        sa.Column('image_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('found_url', sa.Text(), nullable=False),
        sa.Column('domain', sa.String(length=255), nullable=False),
        sa.Column('similarity_score', sa.Float(), nullable=False),
        sa.Column('is_official', sa.Boolean(), nullable=False),
        sa.Column('threat_level', sa.Enum('SAFE', 'LOW', 'MEDIUM', 'HIGH', name='threatlevel'), nullable=False),
        sa.Column('analyzed_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    )
    op.create_index(op.f('ix_search_results_id'), 'search_results', ['id'])
    op.create_index(op.f('ix_search_results_image_id'), 'search_results', ['image_id'])
    op.create_index(op.f('ix_search_results_domain'), 'search_results', ['domain'])
    op.create_index(op.f('ix_search_results_similarity_score'), 'search_results', ['similarity_score'])
    op.create_index(op.f('ix_search_results_is_official'), 'search_results', ['is_official'])
    op.create_index(op.f('ix_search_results_threat_level'), 'search_results', ['threat_level'])
    op.create_index(op.f('ix_search_results_analyzed_at'), 'search_results', ['analyzed_at'])
    
    # Create content_analyses table
    op.create_table('content_analyses',
        sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4),
        sa.Column('search_result_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('html_content', sa.Text(), nullable=True),
        sa.Column('ai_analysis', postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column('threat_score', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['search_result_id'], ['search_results.id'], ),
    )
    op.create_index(op.f('ix_content_analyses_id'), 'content_analyses', ['id'])
    op.create_index(op.f('ix_content_analyses_search_result_id'), 'content_analyses', ['search_result_id'])
    op.create_index(op.f('ix_content_analyses_threat_score'), 'content_analyses', ['threat_score'])
    op.create_index(op.f('ix_content_analyses_created_at'), 'content_analyses', ['created_at'])
    
    # Create whitelist_domains table
    op.create_table('whitelist_domains',
        sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4),
        sa.Column('domain', sa.String(length=255), nullable=False),
        sa.Column('added_by', sa.String(length=255), nullable=False),
        sa.Column('added_at', sa.DateTime(), nullable=False),
        sa.UniqueConstraint('domain', name='uq_whitelist_domains_domain'),
    )
    op.create_index(op.f('ix_whitelist_domains_id'), 'whitelist_domains', ['id'])
    op.create_index(op.f('ix_whitelist_domains_domain'), 'whitelist_domains', ['domain'])
    op.create_index(op.f('ix_whitelist_domains_added_by'), 'whitelist_domains', ['added_by'])
    op.create_index(op.f('ix_whitelist_domains_added_at'), 'whitelist_domains', ['added_at'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('content_analyses')
    op.drop_table('search_results')
    op.drop_table('whitelist_domains')
    op.drop_table('images')
    # ### end Alembic commands ###
